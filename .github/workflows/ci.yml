name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '18'

jobs:
  # 빌드 및 기본 체크
  build-and-check:
    name: Build and Quality Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm install --prefer-offline --no-audit
        
      - name: Run ESLint (non-blocking)
        run: npm run lint --silent || echo "ESLint warnings found but continuing..."
        continue-on-error: true
        
      - name: Check TypeScript (non-blocking)
        run: npm run type-check --silent || echo "TypeScript errors found but continuing..."
        continue-on-error: true
        
      - name: Build application
        run: npm run build
        env:
          NEXT_PUBLIC_SUPABASE_URL: https://xbkzzpewdfmykcosflky.supabase.co
          NEXT_PUBLIC_SUPABASE_ANON_KEY: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Inhia3p6cGV3ZGZteWtjb3Nma2x5Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTM1NTU4OTUsImV4cCI6MjA2OTEzMTg5NX0.0R60-NOw-s3L7IRQAzQFvCsIxjgzLJ4PjCqJYMILZUA
        
      - name: Basic security check
        run: npm audit --audit-level=critical --silent || echo "Security warnings found but not blocking build"
        continue-on-error: true

  # 배포 (main 브랜치에서만) - Vercel token이 설정될 때까지 비활성화
  # deploy:
  #   name: Deploy to Vercel
  #   runs-on: ubuntu-latest
  #   needs: [build, security]
  #   if: github.ref == 'refs/heads/main' && github.event_name == 'push'
  #   
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4
  #       
  #     - name: Deploy to Vercel
  #       uses: amondnet/vercel-action@v25
  #       with:
  #         vercel-token: ${{ secrets.VERCEL_TOKEN }}
  #         vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
  #         vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
  #         vercel-args: '--prod'
          
  # 프리뷰 배포 (PR에서만) - Vercel token이 설정될 때까지 비활성화
  # preview-deploy:
  #   name: Preview Deploy
  #   runs-on: ubuntu-latest
  #   needs: [build]
  #   if: github.event_name == 'pull_request'
  #   
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4
  #       
  #     - name: Deploy Preview to Vercel
  #       uses: amondnet/vercel-action@v25
  #       with:
  #         vercel-token: ${{ secrets.VERCEL_TOKEN }}
  #         vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
  #         vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
  #         github-comment: true